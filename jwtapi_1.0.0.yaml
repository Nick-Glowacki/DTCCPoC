swagger: '2.0'
info:
  version: 1.0.0
  title: jwtAPI
  x-ibm-name: jwtapi
host: $(catalog.host)
basePath: /
paths:
  /validate-jwt:
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: Authorization
        type: string
        required: true
        in: header
        description: 'Bearer <jwt-token>'
  /generate-jwt:
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: iss-claim
        type: string
        required: true
        in: header
        description: Issuer claim
      - name: aud-claim
        type: string
        required: true
        in: header
        description: Audience claim
securityDefinitions: {}
security: []
x-ibm-configuration:
  assembly:
    execute:
      - set-variable:
          title: set-variable
          actions:
            - value: '{ "alg": "HS256",   "kty": "oct",   "use": "sig",   "k": "o5yErLaE-dbgVpSw65Rq57OA9dHyaF66Q_Et5azPa-XUjbyP0w9iRWhR4kru09aFfQLXeIODIN4uhjElYKXt8n76jt0Pjkd2pqk4t9abRF6tnL19GV4pflfL6uvVKkP4weOh39tqHt4TmkBgF2P-gFhgssZpjwq6l82fz3dUhQ2nkzoLA_CnyDGLZLd7SZ1yv73uzfE2Ot813zmig8KTMEMWVcWSDvy61F06vs_6LURcq_IEEevUiubBxG5S2akNnWigfpbhWYjMI5M22FOCpdcDBt4L7K1-yHt95Siz0QUb0MNlT_X8F76wH7_A37GpKKJGqeaiNWmHkgWdE8QWDQ",   "kid": "hs256-key" }'
              add: hs256-key
      - switch:
          title: switch
          case:
            - condition: "((request.verb==='GET')&&(api.operation.path==='/generate-jwt'))"
              execute:
                - jwt-generate:
                    title: jwt-generate
                    jwt: generated-jwt
                    exp-claim: 36000
                    version: 1.0.0
                    jwe-enc: A128CBC-HS256
                    jwe-alg: A256KW
                    jws-alg: HS256
                    jti-claim: false
                    jws-jwk: hs256-key
                    iss-claim: request.headers.iss-claim
                    sub-claim: ''
                    aud-claim: request.headers.aud-claim
                - gatewayscript:
                    title: gatewayscript
                    source: "apim.setvariable('message.body',apim.getvariable('generated-jwt'));   \n"
            - condition: "request.authorization.indexOf(\"Bearer\") > -1 && request.verb==='GET'&& api.operation.path==='/validate-jwt'"
              execute:
                - gatewayscript:
                    title: gatewayscript
                    source: >-
                      var authNode
                      = apim.getvariable('request.headers.authorization');



                      apim.setvariable('input-jwt', authNode.replace(/^Bearer /g,
                      ''));
                - jwt-validate:
                    title: jwt-validate
                    jwt: input-jwt
                    output-claims: decoded-claims
                    version: 1.0.0
                    iss-claim: apic
                    aud-claim: id1
                    description: ''
                    jws-jwk: hs256-key
                - gatewayscript:
                    title: gatewayscript
                    source: "apim.setvariable('message.body',apim.getvariable('decoded-claims')); \n"
            - otherwise:
                - set-variable:
                    title: set-variable
                    actions:
                      - value: '302'
                        set: message.status.code
                      - set: message.status.reason
                        value: Found
                      - set: message.headers.Location
                        value: 'https://myidp.ibm.com'
    catch:
      - errors:
          - RuntimeError
        execute:
          - set-variable:
              title: set-variable
              actions:
                - value: '400'
                  set: message.status.code
                - set: message.status.reason
                  value: Bad request
          - gatewayscript:
              title: gatewayscript
              source: "apim.setvariable('message.body',apim.getvariable('jwt-validate.error-message'));   \n"
  enforced: true
  testable: true
  phase: realized
  cors:
    enabled: true
  gateway: datapower-gateway
schemes:
  - https
consumes:
  - application/json
  - application/xml
produces:
  - application/xml
  - application/json
